//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
//
//     Manual changes to this file may cause unexpected behavior in your application.
//     Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace ClinicManagementSystem.EF
{
    using System;
    using System.Collections.Generic;
    using System.ComponentModel;
    using System.ComponentModel.DataAnnotations;
    using System.Web;

    public partial class Medicine
    {
        [System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Usage", "CA2214:DoNotCallOverridableMethodsInConstructors")]
        public Medicine()
        {
            this.MedicineFeedbacks = new HashSet<MedicineFeedback>();
            this.MedicineImages = new HashSet<MedicineImage>();
            this.MedicineOrderDetails = new HashSet<MedicineOrderDetail>();
        }
    
        public int MedicineID { get; set; }

        [Required(AllowEmptyStrings = false, ErrorMessage = "Please choice medicine type !")]
        public Nullable<int> TypeID { get; set; }

        [Required(AllowEmptyStrings = false, ErrorMessage = "Please choice supplier !")]
        public Nullable<int> SupplierID { get; set; }

        [Required(AllowEmptyStrings = false, ErrorMessage = "Please enter medicine name !")]
        [StringLength(maximumLength: 100, MinimumLength = 5, ErrorMessage = " Medicine name must be between 5 to 100 charaters")]
        [DisplayName("Medicine Name")]
        public string MedicineName { get; set; }

        [Required(AllowEmptyStrings = false, ErrorMessage = "Please enter short description !")]
        [StringLength(maximumLength: 200, MinimumLength = 5, ErrorMessage = "Short description must be between 5 to 200 charaters")]
        [DisplayName("Short Description")]
        public string ShortDescription { get; set; }

        [Required(AllowEmptyStrings = false, ErrorMessage = "Please enter composition !")]
        [DisplayName("Composition")]
        public string Composition { get; set; }

        [Required(AllowEmptyStrings = false, ErrorMessage = "Please enter usage !")]
        [DisplayName("Usage")]
        public string Usage { get; set; }

        [DisplayName("Unit In Stock")]
        [Range(maximum: Int64.MaxValue, minimum: 0, ErrorMessage = "Unit in stock must be a positive number")]
        public Nullable<int> UnitInStock { get; set; }

        [DisplayName("Unit On Order")]
        [Range(maximum: Int64.MaxValue, minimum: 0, ErrorMessage = "Unit on order must be a positive number")]
        public Nullable<int> UnitOnOrder { get; set; }

        [DisplayName("Old Unit Price")]
        [Required(AllowEmptyStrings = false, ErrorMessage = "Please enter old unit price !")]
        [Range(maximum: Int64.MaxValue, minimum: 0, ErrorMessage = "Old unit price must be a positive number")]
        public Nullable<int> OldUnitPrice { get; set; }


        [Required(AllowEmptyStrings = false, ErrorMessage = "Please enter unit price !")]
        [Range(maximum: Int64.MaxValue, minimum: 0, ErrorMessage = "Unit price must be a positive number")]
        [DisplayName("Unit Price")]
        public Nullable<int> UnitPrice { get; set; }

        public string Thumbnail { get; set; }

        public Nullable<bool> Status { get; set; }

        public HttpPostedFileBase ImageFile { get; set; }

        public virtual Supplier Supplier { get; set; }
        public virtual MedicineType MedicineType { get; set; }
        [System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Usage", "CA2227:CollectionPropertiesShouldBeReadOnly")]
        public virtual ICollection<MedicineFeedback> MedicineFeedbacks { get; set; }
        [System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Usage", "CA2227:CollectionPropertiesShouldBeReadOnly")]
        public virtual ICollection<MedicineImage> MedicineImages { get; set; }
        [System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Usage", "CA2227:CollectionPropertiesShouldBeReadOnly")]
        public virtual ICollection<MedicineOrderDetail> MedicineOrderDetails { get; set; }
    }
}

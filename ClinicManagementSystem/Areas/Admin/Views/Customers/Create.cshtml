@model ClinicManagementSystem.EF.Customer

@{
    ViewBag.Title = "Create Customer";
    ViewBag.Function = "Customers";
    ViewBag.ChildFunction = "Create Customer";
    Layout = "~/Areas/Admin/Views/Shared/_Layout.cshtml";
}

<section class="content">
    <div class="container-fluid">
        <div class="row">
            <div class="col-md-12">

                <div class="card card-green">
                    <div class="card-header">
                        <h3 class="card-title">New Customer</h3>

                    </div>
                    @using (Html.BeginForm("Create", "Customers", FormMethod.Post, new { enctype = "multipart/form-data" }))
                    {
                        @Html.AntiForgeryToken()
                        <div class="form-horizontal">
                            <div class="card-body">
                                <div style="color:red;font-size:20px;font-weight:bold">@ViewBag.Error</div>
                                <div class="form-group row">
                                    @Html.LabelFor(model => model.Username, htmlAttributes: new { @class = "control-label col-md-2" })
                                    <div class="col-md-10">
                                        @Html.EditorFor(model => model.Username, new { htmlAttributes = new { @class = "form-control", @placeholder = "Enter Username", @id = "txtUsername" } })
                                        @Html.ValidationMessageFor(model => model.Username, "", new { @class = "text-danger" })
                                        <div style="color:red" id="notice_invalid_username"></div>
                                    </div>
                                </div>

                                <div class="form-group row">
                                    @Html.LabelFor(model => model.Password, htmlAttributes: new { @class = "control-label col-md-2" })
                                    <div class="col-md-10">
                                        @Html.EditorFor(model => model.Password, new { htmlAttributes = new { @class = "form-control", @type = "password", @placeholder = "Enter Password" } })
                                        @Html.ValidationMessageFor(model => model.Password, "", new { @class = "text-danger" })
                                    </div>
                                </div>

                                <div class="form-group row">
                                    @Html.LabelFor(model => model.FullName, htmlAttributes: new { @class = "control-label col-md-2" })
                                    <div class="col-md-10">
                                        @Html.EditorFor(model => model.FullName, new { htmlAttributes = new { @class = "form-control", @placeholder = "Enter FullName" } })
                                        @Html.ValidationMessageFor(model => model.FullName, "", new { @class = "text-danger" })
                                    </div>
                                </div>

                                <div class="form-group row">
                                    @Html.LabelFor(model => model.DateOfBirth, htmlAttributes: new { @class = "control-label col-md-2" })
                                    <div class="col-md-10">
                                        @Html.EditorFor(model => model.DateOfBirth, new { htmlAttributes = new { @class = "form-control oso", @type = "date" } })
                                        @Html.ValidationMessageFor(model => model.DateOfBirth, "", new { @class = "text-danger" })
                                    </div>
                                </div>

                                <div class="form-group row">
                                    @Html.LabelFor(model => model.Gender, htmlAttributes: new { @class = "control-label col-md-2" })
                                    <div class="col-md-10" style="width: 100%;">
                                        @Html.RadioButtonFor(model => model.Gender, true, new { Checked = "checked" })
                                        <span>Male</span>&emsp;&emsp;
                                        @Html.RadioButtonFor(model => model.Gender, false)
                                        <span>Female</span>
                                        @Html.ValidationMessageFor(model => model.Gender, "", new { @class = "text-danger" })
                                    </div>
                                </div>

                                <div class="form-group row">
                                    @Html.LabelFor(model => model.Phone, htmlAttributes: new { @class = "control-label col-md-2" })
                                    <div class="col-md-10">
                                        @Html.EditorFor(model => model.Phone, new { htmlAttributes = new { @class = "form-control", @placeholder = "Enter Phone Number" } })
                                        @Html.ValidationMessageFor(model => model.Phone, "", new { @class = "text-danger" })
                                    </div>
                                </div>

                                <div class="form-group row">
                                    @Html.LabelFor(model => model.Email, htmlAttributes: new { @class = "control-label col-md-2" })
                                    <div class="col-md-10">
                                        @Html.EditorFor(model => model.Email, new { htmlAttributes = new { @class = "form-control", @placeholder = "Enter Email", @id = "txtEmail" } })
                                        @Html.ValidationMessageFor(model => model.Email, "", new { @class = "text-danger" })
                                        <div style="color:red" id="notice_invalid_email"></div>
                                    </div>
                                </div>

                                <div class="form-group row">
                                    @Html.LabelFor(model => model.Address, htmlAttributes: new { @class = "control-label col-md-2" })
                                    <div class="col-md-10">
                                        @Html.EditorFor(model => model.Address, new { htmlAttributes = new { @class = "form-control", @placeholder = "Enter Address" } })
                                        @Html.ValidationMessageFor(model => model.Address, "", new { @class = "text-danger" })
                                    </div>
                                </div>

                                <div class="form-group row">
                                    @Html.LabelFor(model => model.Avatar, htmlAttributes: new { @class = "col-sm-2 col-form-label" })
                                    <div class="col-sm-10">
                                        <div class="custom-file">
                                            <input type="file" class="custom-file-input" name="ImageFile" id="ImageFile" required>
                                            <label class="custom-file-label" for="customFile">Choose file</label>
                                            @Html.ValidationMessageFor(model => model.ImageFile, "", new { @class = "text-danger" })
                                        </div>
                                    </div>
                                </div>

                                <div class="form-group row">
                                    @Html.LabelFor(model => model.Status, htmlAttributes: new { @class = "control-label col-md-2" })
                                    <div class="col-md-10">
                                        <div class="checkbox">
                                            @{
                                                var selectListStatus = new SelectList(new List<SelectListItem> { new SelectListItem { Text = "Active", Value = "true" }, new SelectListItem { Text = "Disable", Value = "false" }, }, "Value", "Text");
                                            }
                                            @Html.DropDownListFor(model => model.Status, selectListStatus, htmlAttributes: new { @class = "form-control" })
                                            @Html.ValidationMessageFor(model => model.Status, "", new { @class = "text-danger" })
                                        </div>
                                    </div>
                                </div>
                            </div>

                            <div class="card-footer">
                                <button type="submit" class="btn btn-success">Create</button>
                                <a class="btn btn-default float-right" href="~/Admin/Customers">Cancel</a>
                            </div>
                        </div>
                    }
                </div>
            </div>
        </div>
    </div>
</section>

@section ScriptConfig
{
    <link href="~/Asset/plugins/daterangepicker/daterangepicker.css" rel="stylesheet" />
    <script src="~/Asset/plugins/daterangepicker/daterangepicker.js"></script>
    <script src="~/Asset/plugins/bs-custom-file-input/bs-custom-file-input.min.js"></script>
    <script src="~/Content/jsController/customerController.js"></script>

}